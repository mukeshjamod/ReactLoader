{"ast":null,"code":"var _jsxFileName = \"/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from 'react';\nimport EventItem from '../components/EventItem';\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 23\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"SP42t2+YEs6IFgo/PrvLllNbJZk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    return json({\n      message: 'couls not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError:true,message:'Could not fetch'};\n    //  throw new Response(JSON.stringify( {message: 'could not fetch event'}),({\n\n    //    status: 500,\n    //  })\n    //)\n\n    return json({\n      Message: 'could not fetch event'\n    }, {\n      status: 500\n    });\n  } else {\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Suspense","EventItem","useRouteLoaderData","json","redirect","defer","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadEvent","loadedEvents","loadEvents","_c","id","response","fetch","ok","message","status","resData","Message","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/EventDetail.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport EventItem from '../components/EventItem';\nimport { useRouteLoaderData, json,redirect,defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n\n  const {event,events} = useRouteLoaderData('event-detail');\n\n  return (<>\n  <Suspense fallback={<p style={{textAlign:'center'}}>Loading...</p>}>\n    <Await resolve={event}>\n      {(loadedEvent) =><EventItem event={loadEvent}/>}\n    </Await>\n    </Suspense>\n    <Suspense fallback={<p style={{textAlign:'center'}}>Loading...</p>}>\n \n   <Await resolve={events}>\n    {(loadedEvents) =><EventsList events={loadEvents}/>}\n   </Await>\n   \n  </Suspense>\n  \n  </>\n    \n  );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id){\n  const response = await fetch('http://localhost:8080/events/' + id);\n\n  if (!response.ok) {\n    return json(\n      { message: 'couls not fetch details for selected event.' },\n\n      { status: 500 })\n  }\n\n  else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n\n  if(!response.ok){\n    //return {isError:true,message:'Could not fetch'};\n      //  throw new Response(JSON.stringify( {message: 'could not fetch event'}),({\n\n      //    status: 500,\n      //  })\n       //)\n  \n    return json(\n      {Message: 'could not fetch event'},\n      {status: 500 ,}\n    );\n}\n  else{\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  return defer({\n    event: loadEvent(id),\n    events:loadEvents()\n  })\n}\n\n\nexport async function action({ params, request }) {\n\n  const eventId = params.eventId;\n\n  const response = await fetch('http://localhost:8080/events/' + eventId,\n { method: request.method,});\n         \n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, { status: 500 });\n\n  }\n  return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}