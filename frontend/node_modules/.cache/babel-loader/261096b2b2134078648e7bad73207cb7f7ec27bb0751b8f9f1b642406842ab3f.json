{"ast":null,"code":"var _jsxFileName = \"/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/Events.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true);\n};\n_s(EventsPage, \"R4zpHW+OeJ/n+4OP2FLims+zbnw=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useState","useEffect","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","isLoading","setIsLoading","fetchedEvents","setFetchedEvents","error","setError","fetchEvents","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","$RefreshReg$"],"sources":["/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/Events.js"],"sourcesContent":["\nimport React from 'react';\nimport  {useState, useEffect} from 'react';\nimport EventsList from '../components/EventsList';\n\nconst EventsPage = () => {\n\n  const[isLoading, setIsLoading] = useState(false);\n\n  const[fetchedEvents, setFetchedEvents] =useState();\n  const[error,setError] = useState();\n\nuseEffect(() => {\nasync function fetchEvents(){\n  setIsLoading(true);\n  \n  setIsLoading(false);\n}\n  \nfetchEvents();\n}, []);\n\n  return (\n    <>\n    <div style={{textAlign:'center'}}>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </div>\n    {!isLoading && fetchedEvents && <EventsList events={fetchedEvents}/>}\n    </>\n  )\n}\n\nexport default EventsPage"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEhD,MAAK,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAEZ,QAAQ,EAAE;EAClD,MAAK,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,EAAE;EAEpCC,SAAS,CAAC,MAAM;IAChB,eAAec,WAAWA,CAAA,EAAE;MAC1BL,YAAY,CAAC,IAAI,CAAC;MAElBA,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAK,WAAW,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA;MAAKa,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAAF,QAAA,GAC9BP,SAAS,iBAAIL,OAAA;QAAAY,QAAA,EAAG;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EAC9BT,KAAK,iBAAIT,OAAA;QAAAY,QAAA,EAAIH;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,EACL,CAACb,SAAS,IAAIE,aAAa,iBAAIP,OAAA,CAACF,UAAU;MAACqB,MAAM,EAAEZ;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACjE;AAEP,CAAC;AAAAd,EAAA,CA1BKD,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AA4BhB,eAAeA,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}