{"ast":null,"code":"var _jsxFileName = \"/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from 'react';\nimport EventItem from '../components/EventItem';\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      children: [/*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: /*#__PURE__*/_jsxDEV(EventItem, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Await, {\n        children: /*#__PURE__*/_jsxDEV(EventsList, {\n          event: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"SP42t2+YEs6IFgo/PrvLllNbJZk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    return json({\n      message: 'couls not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError:true,message:'Could not fetch'};\n    //  throw new Response(JSON.stringify( {message: 'could not fetch event'}),({\n\n    //    status: 500,\n    //  })\n    //)\n\n    return json({\n      Message: 'could not fetch event'\n    }, {\n      status: 500\n    });\n  } else {\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Suspense","EventItem","useRouteLoaderData","json","redirect","defer","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","Message","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/EventDetail.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport EventItem from '../components/EventItem';\nimport { useRouteLoaderData, json,redirect,defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n\n  const {event,events} = useRouteLoaderData('event-detail');\n\n  return (<>\n  <Suspense>\n    <Await resolve={event}>\n       <EventItem event={event} />\n    </Await>\n   <Await>\n     <EventsList event={events}/>\n   </Await>\n   \n  </Suspense>\n  \n  </>\n    \n  );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id){\n  const response = await fetch('http://localhost:8080/events/' + id);\n\n  if (!response.ok) {\n    return json(\n      { message: 'couls not fetch details for selected event.' },\n\n      { status: 500 })\n  }\n\n  else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n\n  if(!response.ok){\n    //return {isError:true,message:'Could not fetch'};\n      //  throw new Response(JSON.stringify( {message: 'could not fetch event'}),({\n\n      //    status: 500,\n      //  })\n       //)\n  \n    return json(\n      {Message: 'could not fetch event'},\n      {status: 500 ,}\n    );\n}\n  else{\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  return defer({\n    event: loadEvent(id),\n    events:loadEvents()\n  })\n}\n\n\nexport async function action({ params, request }) {\n\n  const eventId = params.eventId;\n\n  const response = await fetch('http://localhost:8080/events/' + eventId,\n { method: request.method,});\n         \n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, { status: 500 });\n\n  }\n  return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}