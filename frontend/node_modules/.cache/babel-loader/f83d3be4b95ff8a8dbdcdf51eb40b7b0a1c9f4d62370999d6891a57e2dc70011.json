{"ast":null,"code":"var _jsxFileName = \"/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/NewEvent.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!Response.ok) {\n    throw json({});\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","fetch","method","headers","body","JSON","stringify","Response","ok","json","$RefreshReg$"],"sources":["/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/page/NewEvent.js"],"sourcesContent":["import React from 'react';\nimport EventForm from '../components/EventForm';\n\n\nconst NewEventPage = () => {\n  return (\n    <EventForm/>\n  )\n}\n\nexport default NewEventPage;\n\nexport async function action({request,params}){\n   const data = await request.formData();\n\n   const eventData = {\n    title :data.get('title'),\n    image:data.get('image'),\n    date:data.get('date'),\n    description:data.get('description')}\n\n  fetch('http://localhost:8080/events',{\n    method:'POST',\n    headers:{\n      'content-Type':'application/json',\n    },\n    body:JSON.stringify(eventData),\n  });\n\n  if(!Response.ok){\n    throw json({})\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAEhB,CAAC;AAAAC,EAAA,GAJKL,YAAY;AAMlB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAACC,OAAO;IAACC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EAAC,CAAC;EAEtCI,KAAK,CAAC,8BAA8B,EAAC;IACnCC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACX,SAAS;EAC/B,CAAC,CAAC;EAEF,IAAG,CAACY,QAAQ,CAACC,EAAE,EAAC;IACd,MAAMC,IAAI,CAAC,CAAC,CAAC,CAAC;EAChB;AACF;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}