{"ast":null,"code":"var _jsxFileName = \"/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport EditEventPage from './page/EditEvent';\nimport ErrorPage from './page/Error';\nimport EventDetailPage, { loader as eventDetailLoader } from './page/EventDetail';\nimport EventsPage, { loader as eventsLoader } from './page/Events';\nimport EventsRootLayout from './page/EventsRoot';\nimport HomePage from './page/Home';\nimport NewEventPage from './page/NewEvent';\nimport RootLayout from './page/Root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 35\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: 'eventId',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this)\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }, this)\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 35\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","ErrorPage","EventDetailPage","loader","eventDetailLoader","EventsPage","eventsLoader","EventsRootLayout","HomePage","NewEventPage","RootLayout","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/home/mukesh/Intership/redux/Event loader/event-loader/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\nimport EditEventPage from './page/EditEvent';\nimport ErrorPage from './page/Error';\nimport EventDetailPage, { loader as eventDetailLoader } from './page/EventDetail';\nimport EventsPage, { loader as eventsLoader } from './page/Events';\nimport EventsRootLayout from './page/EventsRoot';\nimport HomePage from './page/Home';\nimport NewEventPage from './page/NewEvent';\nimport RootLayout from './page/Root';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events',\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true, element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: 'eventId',\n            id: 'event-detail',\n            loader: eventDetailLoader,\n            children: [{\n              index: true,\n              element: <EventDetailPage />\n            },\n\n            { path: 'edit', element: <EditEventPage /> },\n\n            ],\n          },\n\n\n          { path: 'new', element: <NewEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return (\n    <RouterProvider router={router} />\n  );\n}\n\nexport default App;"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEtE,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,eAAe,IAAIC,MAAM,IAAIC,iBAAiB,QAAQ,oBAAoB;AACjF,OAAOC,UAAU,IAAIF,MAAM,IAAIG,YAAY,QAAQ,eAAe;AAClE,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;EACEe,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACF,UAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EACvBC,YAAY,eAAER,OAAA,CAACX,SAAS;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACJ,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,CAAC,EACtC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACL,gBAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IAC7BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEH,OAAA,CAACP,UAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MACpChB,MAAM,EAAEG;IACV,CAAC,EACD;MACEQ,IAAI,EAAE,SAAS;MACfS,EAAE,EAAE,cAAc;MAClBpB,MAAM,EAAEC,iBAAiB;MACzBiB,QAAQ,EAAE,CAAC;QACTC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEH,OAAA,CAACV,eAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC3B,CAAC,EAED;QAAEL,IAAI,EAAE,MAAM;QAAEC,OAAO,eAAEH,OAAA,CAACZ,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,CAAC;IAG9C,CAAC,EAGD;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACH,YAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC;EAE9C,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASK,GAAGA,CAAA,EAAG;EACb,oBACEZ,OAAA,CAACd,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAEtC;AAACM,EAAA,GAJQD,GAAG;AAMZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}